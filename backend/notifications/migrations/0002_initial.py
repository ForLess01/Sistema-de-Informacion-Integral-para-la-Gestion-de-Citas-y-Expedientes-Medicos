# Generated by Django 5.2.3 on 2025-07-10 20:58

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("notifications", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        unique=True,
                        verbose_name="ID de Notificación",
                    ),
                ),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "subject",
                    models.CharField(blank=True, max_length=255, verbose_name="Asunto"),
                ),
                ("message", models.TextField(verbose_name="Mensaje")),
                (
                    "context_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Datos adicionales en formato JSON",
                        verbose_name="Datos de Contexto",
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("push", "Push Notification"),
                            ("in_app", "In-App Notification"),
                        ],
                        max_length=10,
                        verbose_name="Canal",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Baja"),
                            ("normal", "Normal"),
                            ("high", "Alta"),
                            ("urgent", "Urgente"),
                        ],
                        default="normal",
                        max_length=10,
                        verbose_name="Prioridad",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("sent", "Enviada"),
                            ("delivered", "Entregada"),
                            ("failed", "Fallida"),
                            ("cancelled", "Cancelada"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "scheduled_for",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Programada para",
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Enviada en"
                    ),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Entregada en"
                    ),
                ),
                ("attempts", models.IntegerField(default=0, verbose_name="Intentos")),
                (
                    "max_attempts",
                    models.IntegerField(default=3, verbose_name="Máximo Intentos"),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Mensaje de Error"),
                ),
                (
                    "recipient_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        verbose_name="Email del Destinatario",
                    ),
                ),
                (
                    "recipient_phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        verbose_name="Teléfono del Destinatario",
                    ),
                ),
                ("push_token", models.TextField(blank=True, verbose_name="Token Push")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Destinatario",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notificación",
                "verbose_name_plural": "Notificaciones",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NotificationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("created", "Creada"),
                            ("sent", "Enviada"),
                            ("delivered", "Entregada"),
                            ("failed", "Fallida"),
                            ("cancelled", "Cancelada"),
                            ("retry", "Reintento"),
                        ],
                        max_length=50,
                        verbose_name="Acción",
                    ),
                ),
                ("details", models.TextField(blank=True, verbose_name="Detalles")),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "notification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="notifications.notification",
                        verbose_name="Notificación",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log de Notificación",
                "verbose_name_plural": "Logs de Notificaciones",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email_enabled",
                    models.BooleanField(default=True, verbose_name="Email Habilitado"),
                ),
                (
                    "sms_enabled",
                    models.BooleanField(default=False, verbose_name="SMS Habilitado"),
                ),
                (
                    "push_enabled",
                    models.BooleanField(default=True, verbose_name="Push Habilitado"),
                ),
                (
                    "in_app_enabled",
                    models.BooleanField(default=True, verbose_name="In-App Habilitado"),
                ),
                (
                    "appointment_reminders",
                    models.BooleanField(
                        default=True, verbose_name="Recordatorios de Citas"
                    ),
                ),
                (
                    "appointment_confirmations",
                    models.BooleanField(
                        default=True, verbose_name="Confirmaciones de Citas"
                    ),
                ),
                (
                    "exam_results",
                    models.BooleanField(
                        default=True, verbose_name="Resultados de Exámenes"
                    ),
                ),
                (
                    "prescription_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Notificaciones de Recetas"
                    ),
                ),
                (
                    "emergency_alerts",
                    models.BooleanField(
                        default=True, verbose_name="Alertas de Emergencia"
                    ),
                ),
                (
                    "system_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Notificaciones del Sistema"
                    ),
                ),
                (
                    "quiet_hours_start",
                    models.TimeField(
                        default="22:00", verbose_name="Inicio de Horas Silenciosas"
                    ),
                ),
                (
                    "quiet_hours_end",
                    models.TimeField(
                        default="07:00", verbose_name="Fin de Horas Silenciosas"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[("es", "Español"), ("en", "English")],
                        default="es",
                        max_length=5,
                        verbose_name="Idioma",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_preferences",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuario",
                    ),
                ),
            ],
            options={
                "verbose_name": "Preferencia de Notificación",
                "verbose_name_plural": "Preferencias de Notificaciones",
            },
        ),
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nombre"
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("appointment_reminder", "Recordatorio de Cita"),
                            ("appointment_confirmation", "Confirmación de Cita"),
                            ("appointment_cancellation", "Cancelación de Cita"),
                            ("appointment_reschedule", "Reprogramación de Cita"),
                            ("exam_results", "Resultados de Exámenes"),
                            ("prescription_ready", "Receta Lista"),
                            ("emergency_alert", "Alerta de Emergencia"),
                            ("welcome", "Bienvenida"),
                            ("password_reset", "Restablecimiento de Contraseña"),
                            ("payment_reminder", "Recordatorio de Pago"),
                            ("system_maintenance", "Mantenimiento del Sistema"),
                        ],
                        max_length=30,
                        verbose_name="Tipo de Notificación",
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("push", "Push Notification"),
                            ("in_app", "In-App Notification"),
                        ],
                        max_length=10,
                        verbose_name="Canal",
                    ),
                ),
                (
                    "subject_template",
                    models.CharField(
                        blank=True,
                        help_text="Para emails y notificaciones push",
                        max_length=255,
                        verbose_name="Plantilla de Asunto",
                    ),
                ),
                (
                    "body_template",
                    models.TextField(
                        help_text="Usar {{variable}} para variables dinámicas",
                        verbose_name="Plantilla de Cuerpo",
                    ),
                ),
                (
                    "is_html",
                    models.BooleanField(
                        default=False,
                        help_text="Solo para emails",
                        verbose_name="Es HTML",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activa")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Plantilla de Notificación",
                "verbose_name_plural": "Plantillas de Notificaciones",
                "ordering": ["notification_type", "channel"],
                "unique_together": {("notification_type", "channel")},
            },
        ),
        migrations.AddField(
            model_name="notification",
            name="template",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notifications",
                to="notifications.notificationtemplate",
                verbose_name="Plantilla",
            ),
        ),
        migrations.CreateModel(
            name="PushDevice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "device_token",
                    models.TextField(unique=True, verbose_name="Token del Dispositivo"),
                ),
                (
                    "device_type",
                    models.CharField(
                        choices=[
                            ("ios", "iOS"),
                            ("android", "Android"),
                            ("web", "Web"),
                        ],
                        max_length=20,
                        verbose_name="Tipo de Dispositivo",
                    ),
                ),
                (
                    "device_name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Nombre del Dispositivo",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Activo")),
                ("last_used", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="push_devices",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuario",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dispositivo Push",
                "verbose_name_plural": "Dispositivos Push",
                "ordering": ["-last_used"],
            },
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["recipient", "status"], name="notificatio_recipie_e285de_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["scheduled_for", "status"],
                name="notificatio_schedul_6d53f3_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["channel", "status"], name="notificatio_channel_289841_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["priority", "status"], name="notificatio_priorit_27f109_idx"
            ),
        ),
    ]
