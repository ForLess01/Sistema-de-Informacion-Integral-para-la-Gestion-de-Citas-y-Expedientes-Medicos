# Generated by Django 5.2.3 on 2025-07-09 07:56

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("pharmacy", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EmergencyCase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "case_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "arrival_time",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "arrival_mode",
                    models.CharField(
                        choices=[
                            ("walk_in", "Caminando"),
                            ("ambulance", "Ambulancia"),
                            ("private_vehicle", "Vehículo privado"),
                            ("police", "Policía"),
                            ("other", "Otro"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "chief_complaint",
                    models.TextField(help_text="Motivo principal de consulta"),
                ),
                (
                    "triage_level",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Resucitación - Riesgo vital inmediato"),
                            (2, "Emergencia - Riesgo vital potencial"),
                            (3, "Urgencia - Situación urgente"),
                            (4, "Menos urgente - Situación menos urgente"),
                            (5, "No urgente - Situación no urgente"),
                        ],
                        null=True,
                    ),
                ),
                ("triage_time", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("waiting", "En espera"),
                            ("in_triage", "En triaje"),
                            ("in_treatment", "En tratamiento"),
                            ("observation", "En observación"),
                            ("discharged", "Alta"),
                            ("admitted", "Hospitalizado"),
                            ("transferred", "Transferido"),
                            ("deceased", "Fallecido"),
                        ],
                        default="waiting",
                        max_length=20,
                    ),
                ),
                ("treatment_start_time", models.DateTimeField(blank=True, null=True)),
                ("treatment_end_time", models.DateTimeField(blank=True, null=True)),
                ("discharge_time", models.DateTimeField(blank=True, null=True)),
                ("discharge_diagnosis", models.TextField(blank=True)),
                ("discharge_instructions", models.TextField(blank=True)),
                ("follow_up_required", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "attending_doctor",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"role": "doctor"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="emergency_patients",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        limit_choices_to={"role": "patient"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emergency_cases",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "triage_nurse",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"role": "nurse"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="triaged_cases",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Caso de Emergencia",
                "verbose_name_plural": "Casos de Emergencia",
                "ordering": ["-arrival_time", "triage_level"],
            },
        ),
        migrations.CreateModel(
            name="EmergencyMedication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dose", models.CharField(max_length=100)),
                (
                    "route",
                    models.CharField(
                        choices=[
                            ("oral", "Oral"),
                            ("iv", "Intravenosa"),
                            ("im", "Intramuscular"),
                            ("sc", "Subcutánea"),
                            ("topical", "Tópica"),
                            ("inhalation", "Inhalación"),
                            ("other", "Otra"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "administered_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "response",
                    models.TextField(
                        blank=True, help_text="Respuesta del paciente al medicamento"
                    ),
                ),
                ("adverse_reaction", models.BooleanField(default=False)),
                ("adverse_reaction_details", models.TextField(blank=True)),
                (
                    "administered_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="emergency_medications_administered",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "emergency_case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medications",
                        to="emergency.emergencycase",
                    ),
                ),
                (
                    "medication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="pharmacy.medication",
                    ),
                ),
            ],
            options={
                "verbose_name": "Medicamento de Emergencia",
                "verbose_name_plural": "Medicamentos de Emergencia",
                "ordering": ["-administered_at"],
            },
        ),
        migrations.CreateModel(
            name="EmergencyProcedure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("procedure_name", models.CharField(max_length=200)),
                ("procedure_code", models.CharField(blank=True, max_length=50)),
                ("description", models.TextField()),
                (
                    "performed_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "outcome",
                    models.CharField(
                        choices=[
                            ("successful", "Exitoso"),
                            ("partial", "Parcialmente exitoso"),
                            ("failed", "Fallido"),
                            ("aborted", "Abortado"),
                        ],
                        max_length=50,
                    ),
                ),
                ("complications", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "emergency_case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="procedures",
                        to="emergency.emergencycase",
                    ),
                ),
                (
                    "performed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="emergency_procedures_performed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Procedimiento de Emergencia",
                "verbose_name_plural": "Procedimientos de Emergencia",
                "ordering": ["-performed_at"],
            },
        ),
        migrations.CreateModel(
            name="EmergencyTransfer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transfer_type",
                    models.CharField(
                        choices=[
                            ("ward", "Sala general"),
                            ("icu", "UCI"),
                            ("surgery", "Quirófano"),
                            ("other_hospital", "Otro hospital"),
                            ("specialist", "Especialista"),
                        ],
                        max_length=50,
                    ),
                ),
                ("destination", models.CharField(max_length=200)),
                ("reason", models.TextField()),
                (
                    "transfer_time",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "transport_mode",
                    models.CharField(
                        choices=[
                            ("stretcher", "Camilla"),
                            ("wheelchair", "Silla de ruedas"),
                            ("ambulance", "Ambulancia"),
                            ("walking", "Caminando"),
                        ],
                        max_length=50,
                    ),
                ),
                ("transfer_notes", models.TextField()),
                ("receiving_doctor", models.CharField(blank=True, max_length=200)),
                (
                    "arranged_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="emergency_transfers_arranged",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "emergency_case",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transfer",
                        to="emergency.emergencycase",
                    ),
                ),
            ],
            options={
                "verbose_name": "Transferencia de Emergencia",
                "verbose_name_plural": "Transferencias de Emergencia",
                "ordering": ["-transfer_time"],
            },
        ),
        migrations.CreateModel(
            name="EmergencyVitalSigns",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "blood_pressure_systolic",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(300),
                        ],
                    ),
                ),
                (
                    "blood_pressure_diastolic",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(200),
                        ],
                    ),
                ),
                (
                    "heart_rate",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(300),
                        ],
                    ),
                ),
                (
                    "respiratory_rate",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(60),
                        ],
                    ),
                ),
                (
                    "temperature",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(30.0),
                            django.core.validators.MaxValueValidator(45.0),
                        ],
                    ),
                ),
                (
                    "oxygen_saturation",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "pain_scale",
                    models.IntegerField(
                        blank=True,
                        help_text="Escala de dolor 0-10",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "glasgow_coma_scale",
                    models.IntegerField(
                        blank=True,
                        help_text="Escala de coma de Glasgow",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(3),
                            django.core.validators.MaxValueValidator(15),
                        ],
                    ),
                ),
                (
                    "recorded_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "emergency_case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vital_signs",
                        to="emergency.emergencycase",
                    ),
                ),
                (
                    "recorded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="emergency_vital_signs_recorded",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Signos Vitales de Emergencia",
                "verbose_name_plural": "Signos Vitales de Emergencia",
                "ordering": ["-recorded_at"],
            },
        ),
        migrations.AddIndex(
            model_name="emergencycase",
            index=models.Index(
                fields=["status", "triage_level"], name="emergency_e_status_b19c61_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emergencycase",
            index=models.Index(
                fields=["arrival_time"], name="emergency_e_arrival_8334a6_idx"
            ),
        ),
    ]
